{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoding","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qRA8BeA,MA3Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAG,KAAhD,gBCwCOC,G,kNAlDbC,MAAQ,CACNC,UAAU,EACVC,OAAO,I,EAETC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,yDANQ,gBAGCJ,EAHD,EAERK,KACEA,KAAOL,OAMX,EAAKM,SAAS,CAAEN,SAAQD,UAAU,IATxB,2C,uDAaZ,WACEQ,KAAKN,c,oBAGP,WAAU,IAAD,EACsBM,KAAKT,MAA1BC,EADD,EACCA,SAAUC,EADX,EACWA,OAClB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACA,sBAAMA,UAAU,eAAhB,0BAEAU,EAAOP,KAAI,SAAAe,GAAK,OAChB,qBAAKlB,UAAU,SAAf,SACE,cAAC,EAAD,CAEImB,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANRmB,EAAMC,e,GAjCVE,IAAMC,YCDxBC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.5d2e9cfa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0, 180)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\"\nimport\"./App.css\";\n\n//best way to use setState that not depends on that external state.\nclass App extends React.Component {\n  state = {\n    isLoding: true,\n    movies:[]\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data :{movies}\n      }\n    } = await axios.get(\n      \"https://yts.mx/api/v2/list_movies.json?sort_by=rating\"\n    ); //sort by rating\n    \n    this.setState({ movies, isLoding: false }); // short version ({movies:movies})\n    \n\n  }\n  componentDidMount(){\n    this.getMovies();\n      }\n\n  render() {\n    const { isLoding, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoding \n        ? <div className=\"loader\">\n          <span className=\"loader__text\">Loading...</span>\n        </div> \n        : movies.map(movie => (\n          <div className=\"movies\">\n            <Movie \n                key ={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n               />\n          </div>\n              \n            )\n          )\n        }      \n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.getElementById('root') );\n\n\n"],"sourceRoot":""}